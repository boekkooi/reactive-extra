// Generated by CoffeeScript 1.7.1
(function() {
  this.ReactiveObject = (function() {
    function ReactiveObject(properties) {
      var self;
      this._definePrivateProperty('_items', {});
      this._definePrivateProperty('_itemsDeps', {});
      self = this;
      if (_.isArray(properties)) {
        _.each(properties, function(prop) {
          return self.defineProperty(prop, void 0);
        });
      }
      if (_.isObject(properties)) {
        _.each(properties, function(value, prop) {
          return self.defineProperty(prop, value);
        });
      }
    }

    ReactiveObject.prototype.defineProperty = function(name, value) {
      Object.defineProperty(this, name, {
        configurable: true,
        enumerable: true,
        get: _.bind(this._propertyGet, this, name),
        set: _.bind(this._propertySet, this, name)
      });
      this[name] = value;
      return this;
    };

    ReactiveObject.prototype.undefineProperty = function(name) {
      var dep;
      dep = this._itemsDeps[name];
      delete this[name];
      delete this._items[name];
      delete this._itemsDeps[name];
      if (dep) {
        dep.changed();
      }
      return this;
    };

    ReactiveObject.prototype.clone = function() {
      return new ReactiveObject(_.clone(this._items));
    };

    ReactiveObject.prototype.equals = function(obj) {
      return (obj != null) && obj instanceof ReactiveObject && _.isEqual(obj._items, this._items);
    };

    ReactiveObject.prototype.typeName = function() {
      return 'reactive-object';
    };

    ReactiveObject.prototype.toJSONValue = function() {
      return EJSON.toJSONValue(this._items);
    };

    ReactiveObject.prototype._propertySet = function(name, value) {
      var _ref;
      this._items[name] = value;
      if ((_ref = this._itemsDeps[name]) != null) {
        _ref.changed();
      }
      return this._items[name];
    };

    ReactiveObject.prototype._propertyGet = function(name) {
      var _base;
      if ((_base = this._itemsDeps)[name] == null) {
        _base[name] = new Deps.Dependency();
      }
      this._itemsDeps[name].depend();
      return this._items[name];
    };

    ReactiveObject.prototype._definePrivateProperty = function(name, value) {
      return Object.defineProperty(this, name, {
        configurable: true,
        enumerable: false,
        writable: true,
        value: value
      });
    };

    return ReactiveObject;

  })();

  EJSON.addType('reactive-object', function(jsonObj) {
    return new ReactiveObject(jsonObj);
  });

}).call(this);
